Packages:
~ Always lower case
~ Package name should be unique
~ Use your internet domain name, reversed, as a prefix for the package name:
    - Replace invalid characters (i.e. -) in domain name with an underscore_
      (domain-name.com -> com.domain_name)
    - Domain name components starting with a number should instead start with an underscore_
      (1domain.com -> com._1domain)
    - Domain name components that are Java keywords should have that component start with an underscore_
      (Switch.domain.com -> com.domain._switch)
    - Examples: java.lang, java.io, org.xml.sax.helper, com.example.package
      -> example is reserved for packages that will never be distributed

Classes:
~ UpperCamelCase (PascalCase)
~ Class names should be nouns (they represent things)

Interfaces:
~ Consider what objects implementing the interface will become of what they will be able to do, examples:
    - List
    - Comparable
    - Serializable

Methods:
~ lowerCamelCase
~ Often verbs
~ Reflect function performed or the result returned, examples: size(), getName(), addPlayer()

Constants:
~ ALL_UPPER_CASE
~ Declared using -> KEYWORD: final

Variables:
~ lowerCamelCase
~ Meaningful and indicative

Type Parameters:
~ Single character, capital letters, examples:
    - E -> Element (used extensively by the Java Collections Framework)
    - K -> Key
    - T -> Type
    - V -> Value
    - S, U, V, etc... -> Second, Third, Fourth types
